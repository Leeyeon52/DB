-- 아래는 PRODUCT, SELL 테이블에 대한 구조를 보여줍니다. 테이블을 수정하실 필요는 없습니다.
DESC PRODUCT;
DESC SELL;

-- 1. SELL 테이블과 PRODUCT 테이블을 상품 ID 기준으로 INNER JOIN 하는 쿼리를 작성하세요.


-- 2. SUM 집계 함수를 이용하여, 판매자 이름, 상품 ID 별 판매 금액을 구하는 쿼리를 작성하세요.

CREATE TABLE PRODUCT(
	PRODUCT_ID INTEGER NOT NULL PRIMARY KEY,
	PRODUCT_NAME VARCHAR(100),
	PRICE INTEGER
);

INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_NAME, PRICE) VALUES
(1, "Red Car", 2000),
(2, "Blue Car", 3500),
(3, "White Car", 5000),
(4, "Black Car", 8000);

CREATE TABLE SELL(
	SELL_ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PRODUCT_ID INTEGER,
	QUANTITY INTEGER,
	SELLER_NAME VARCHAR(100)
);

INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(1, 2, 'Kim');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(3, 1, 'Kim');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(4, 2, 'Kim');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(1, 1, 'Lee');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(2, 1, 'Lee');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(4, 3, 'Lee');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(1, 3, 'Choi');
INSERT INTO SELL(PRODUCT_ID, QUANTITY, SELLER_NAME) VALUES(3, 11, 'Choi');

select
    s.SELL_ID,
    s.PRODUCT_ID,
    s.QUANTITY,
    s.SELLER_NAME,
    p.PRODUCT_NAME,
    p.PRICE
from
    sell s
INNER join
    PRODUCT p on s.PRODUCT_ID = p.PRODUCT_ID;

select
    s.SELLER_NAME,
    s.PRODUCT_ID,
    sum(p.PRICE * s.QUANTITY) as total_sales_amount
from
    sell s
INNER join
    PRODUCT p on s.PRODUCT_ID = p.PRODUCT_ID
group by
    s.SELLER_NAME,
    s.PRODUCT_ID;

DESC PRODUCT;
DESC SELL;
